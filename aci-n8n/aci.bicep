param location string
param containerGroupName string
param storageAccountName string
param timeZone string
param caddyDataFileShareName string
param n8nFileShareName string
param overridePublicUrl string = ''

var tenantReuseDnsHash = uniqueString(tenant().tenantId)
var publicUrl = empty(overridePublicUrl)
  ? '${containerGroupName}.${tenantReuseDnsHash}.${location}.azurecontainer.io'
  : overridePublicUrl

resource storageAccount 'Microsoft.Storage/storageAccounts@2023-05-01' existing = {
  name: storageAccountName
}

resource containerGroup 'Microsoft.ContainerInstance/containerGroups@2024-05-01-preview' = {
  name: containerGroupName
  location: location
  properties: {
    sku: 'Standard'
    containers: [
      {
        name: '${containerGroupName}-caddy'
        properties: {
          // https://hub.docker.com/_/caddy
          image: 'docker.io/caddy:latest'
          command: [
            'caddy'
            'reverse-proxy'
            '--from'
            '${publicUrl}'
            '--to'
            'localhost:5678'
          ]
          resources: {
            requests: {
              cpu: 1
              memoryInGB: 1
            }
          }
          ports: [
            {
              port: 443
              protocol: 'TCP'
            }
          ]
          volumeMounts: [
            {
              name: caddyDataFileShareName
              mountPath: '/data'
              readOnly: false
            }
          ]
        }
      }
      {
        name: '${containerGroupName}-n8n'
        properties: {
          // https://hub.docker.com/r/n8nio/n8n
          image: 'docker.io/n8nio/n8n:latest'
          resources: {
            requests: {
              cpu: 1
              memoryInGB: 2
            }
          }
          ports: [
            {
              port: 5678
              protocol: 'TCP'
            }
          ]
          volumeMounts: [
            {
              name: n8nFileShareName
              mountPath: '/home/node/.n8n'
              readOnly: false
            }
          ]
          environmentVariables: [
            {
              name: 'GENERIC_TIMEZONE'
              value: timeZone
            }
            {
              name: 'TZ'
              value: timeZone
            }
            {
              // Disable the telemetry
              name: 'N8N_DIAGNOSTICS_ENABLED'
              value: 'false'
            }
            {
              name: 'N8N_LOG_OUTPUT'
              value: 'console,file'
            }
            {
              name: 'WEBHOOK_URL'
              value: 'https://${publicUrl}/'
            }
          ]
        }
      }
    ]
    osType: 'Linux'
    restartPolicy: 'Never'
    ipAddress: {
      type: 'Public'
      dnsNameLabel: containerGroupName
      autoGeneratedDomainNameLabelScope: 'TenantReuse'
      ports: [
        {
          protocol: 'TCP'
          port: 443
        }
      ]
    }
    volumes: [
      {
        name: caddyDataFileShareName
        azureFile: {
          shareName: caddyDataFileShareName
          storageAccountName: storageAccountName
          storageAccountKey: storageAccount.listKeys().keys[0].value
          readOnly: false
        }
      }
      {
        name: n8nFileShareName
        azureFile: {
          shareName: n8nFileShareName
          storageAccountName: storageAccountName
          storageAccountKey: storageAccount.listKeys().keys[0].value
          readOnly: false
        }
      }
    ]
  }
}
